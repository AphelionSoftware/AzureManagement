//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AzureVMData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AzureVMData object using the connection string found in the 'AzureVMData' section of the application configuration file.
        /// </summary>
        public AzureVMData() : base("name=AzureVMData", "AzureVMData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AzureVMData object.
        /// </summary>
        public AzureVMData(string connectionString) : base(connectionString, "AzureVMData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AzureVMData object.
        /// </summary>
        public AzureVMData(EntityConnection connection) : base(connection, "AzureVMData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vmControl> vmControls
        {
            get
            {
                if ((_vmControls == null))
                {
                    _vmControls = base.CreateObjectSet<vmControl>("vmControls");
                }
                return _vmControls;
            }
        }
        private ObjectSet<vmControl> _vmControls;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vmControls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovmControls(vmControl vmControl)
        {
            base.AddObject("vmControls", vmControl);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="vmControl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vmControl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vmControl object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="vmName">Initial value of the vmName property.</param>
        /// <param name="requestedBy">Initial value of the RequestedBy property.</param>
        /// <param name="vmServiceName">Initial value of the vmServiceName property.</param>
        /// <param name="azureSubscription">Initial value of the AzureSubscription property.</param>
        public static vmControl CreatevmControl(global::System.Int32 id, global::System.String vmName, global::System.String requestedBy, global::System.String vmServiceName, global::System.String azureSubscription)
        {
            vmControl vmControl = new vmControl();
            vmControl.ID = id;
            vmControl.vmName = vmName;
            vmControl.RequestedBy = requestedBy;
            vmControl.vmServiceName = vmServiceName;
            vmControl.AzureSubscription = azureSubscription;
            return vmControl;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vmName
        {
            get
            {
                return _vmName;
            }
            set
            {
                OnvmNameChanging(value);
                ReportPropertyChanging("vmName");
                _vmName = value;
                ReportPropertyChanged("vmName");
                OnvmNameChanged();
            }
        }
        private global::System.String _vmName;
        partial void OnvmNameChanging(global::System.String value);
        partial void OnvmNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = value;
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestedBy
        {
            get
            {
                return _RequestedBy;
            }
            set
            {
                OnRequestedByChanging(value);
                ReportPropertyChanging("RequestedBy");
                _RequestedBy = value;
                ReportPropertyChanged("RequestedBy");
                OnRequestedByChanged();
            }
        }
        private global::System.String _RequestedBy;
        partial void OnRequestedByChanging(global::System.String value);
        partial void OnRequestedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String vmServiceName
        {
            get
            {
                return _vmServiceName;
            }
            set
            {
                OnvmServiceNameChanging(value);
                ReportPropertyChanging("vmServiceName");
                _vmServiceName = value;
                ReportPropertyChanged("vmServiceName");
                OnvmServiceNameChanged();
            }
        }
        private global::System.String _vmServiceName;
        partial void OnvmServiceNameChanging(global::System.String value);
        partial void OnvmServiceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AzureSubscription
        {
            get
            {
                return _AzureSubscription;
            }
            set
            {
                OnAzureSubscriptionChanging(value);
                ReportPropertyChanging("AzureSubscription");
                _AzureSubscription = value;
                ReportPropertyChanged("AzureSubscription");
                OnAzureSubscriptionChanged();
            }
        }
        private global::System.String _AzureSubscription;
        partial void OnAzureSubscriptionChanging(global::System.String value);
        partial void OnAzureSubscriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestedStoptime
        {
            get
            {
                return _RequestedStoptime;
            }
            set
            {
                OnRequestedStoptimeChanging(value);
                ReportPropertyChanging("RequestedStoptime");
                _RequestedStoptime = value;
                ReportPropertyChanged("RequestedStoptime");
                OnRequestedStoptimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestedStoptime;
        partial void OnRequestedStoptimeChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestedStoptimeChanged();

        #endregion

    
    }

    #endregion

    
}
