

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class vmControl : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the vmControl entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vmControl()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vmControl(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.vmControl> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.vmControl.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vmControl_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vmControl_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.vmControl.DetailsClass.GetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string vmName
        {
            get
            {
                return global::LightSwitchApplication.vmControl.DetailsClass.GetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.vmName);
            }
            set
            {
                global::LightSwitchApplication.vmControl.DetailsClass.SetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.vmName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vmName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vmName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vmName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return global::LightSwitchApplication.vmControl.DetailsClass.GetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.StartTime);
            }
            set
            {
                global::LightSwitchApplication.vmControl.DetailsClass.SetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.StartTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RequestedBy
        {
            get
            {
                return global::LightSwitchApplication.vmControl.DetailsClass.GetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.RequestedBy);
            }
            set
            {
                global::LightSwitchApplication.vmControl.DetailsClass.SetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.RequestedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string vmServiceName
        {
            get
            {
                return global::LightSwitchApplication.vmControl.DetailsClass.GetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.vmServiceName);
            }
            set
            {
                global::LightSwitchApplication.vmControl.DetailsClass.SetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.vmServiceName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vmServiceName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vmServiceName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void vmServiceName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AzureSubscription
        {
            get
            {
                return global::LightSwitchApplication.vmControl.DetailsClass.GetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.AzureSubscription);
            }
            set
            {
                global::LightSwitchApplication.vmControl.DetailsClass.SetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.AzureSubscription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AzureSubscription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AzureSubscription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AzureSubscription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> RequestedStoptime
        {
            get
            {
                return global::LightSwitchApplication.vmControl.DetailsClass.GetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.RequestedStoptime);
            }
            set
            {
                global::LightSwitchApplication.vmControl.DetailsClass.SetValue(this, global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.RequestedStoptime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestedStoptime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestedStoptime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequestedStoptime_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.vmControl,
                global::LightSwitchApplication.vmControl.DetailsClass,
                global::LightSwitchApplication.vmControl.DetailsClass.IImplementation,
                global::LightSwitchApplication.vmControl.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass>.Entry
                __vmControlEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass>.Entry(
                    global::LightSwitchApplication.vmControl.DetailsClass.__vmControl_CreateNew,
                    global::LightSwitchApplication.vmControl.DetailsClass.__vmControl_Created,
                    global::LightSwitchApplication.vmControl.DetailsClass.__vmControl_AllowSaveWithErrors);
            private static global::LightSwitchApplication.vmControl __vmControl_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.vmControl> es)
            {
                return new global::LightSwitchApplication.vmControl(es);
            }
            private static void __vmControl_Created(global::LightSwitchApplication.vmControl e)
            {
                e.vmControl_Created();
            }
            private static bool __vmControl_AllowSaveWithErrors(global::LightSwitchApplication.vmControl e)
            {
                bool result = false;
                e.vmControl_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.vmControl.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string> vmName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.vmName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>> StartTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.StartTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string> RequestedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.RequestedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string> vmServiceName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.vmServiceName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string> AzureSubscription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.AzureSubscription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>> RequestedStoptime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties.RequestedStoptime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string vmName { get; set; }
                new global::System.Nullable<global::System.DateTime> StartTime { get; set; }
                new string RequestedBy { get; set; }
                new string vmServiceName { get; set; }
                new string AzureSubscription { get; set; }
                new global::System.Nullable<global::System.DateTime> RequestedStoptime { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vmControl.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, int>.Data> c, global::LightSwitchApplication.vmControl.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.vmControl e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.vmControl e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.vmControl e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Entry
                    vmName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Entry(
                        "vmName",
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmName_Stub,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmName_ComputeIsReadOnly,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmName_Validate,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmName_GetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmName_SetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmName_OnValueChanged);
                private static void _vmName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vmControl.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Data> c, global::LightSwitchApplication.vmControl.DetailsClass d, object sf)
                {
                    c(d, ref d._vmName, sf);
                }
                private static bool _vmName_ComputeIsReadOnly(global::LightSwitchApplication.vmControl e)
                {
                    bool result = false;
                    e.vmName_IsReadOnly(ref result);
                    return result;
                }
                private static void _vmName_Validate(global::LightSwitchApplication.vmControl e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.vmName_Validate(r);
                }
                private static string _vmName_GetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d)
                {
                    return d.ImplementationEntity.vmName;
                }
                private static void _vmName_SetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d, string v)
                {
                    d.ImplementationEntity.vmName = v;
                }
                private static void _vmName_OnValueChanged(global::LightSwitchApplication.vmControl e)
                {
                    e.vmName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    StartTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "StartTime",
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._StartTime_Stub,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._StartTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._StartTime_Validate,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._StartTime_GetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._StartTime_SetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._StartTime_OnValueChanged);
                private static void _StartTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vmControl.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.vmControl.DetailsClass d, object sf)
                {
                    c(d, ref d._StartTime, sf);
                }
                private static bool _StartTime_ComputeIsReadOnly(global::LightSwitchApplication.vmControl e)
                {
                    bool result = false;
                    e.StartTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartTime_Validate(global::LightSwitchApplication.vmControl e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartTime_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _StartTime_GetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d)
                {
                    return d.ImplementationEntity.StartTime;
                }
                private static void _StartTime_SetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.StartTime = global::LightSwitchApplication.vmControl.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _StartTime_OnValueChanged(global::LightSwitchApplication.vmControl e)
                {
                    e.StartTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Entry
                    RequestedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Entry(
                        "RequestedBy",
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedBy_Stub,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedBy_Validate,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedBy_GetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedBy_SetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedBy_OnValueChanged);
                private static void _RequestedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vmControl.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Data> c, global::LightSwitchApplication.vmControl.DetailsClass d, object sf)
                {
                    c(d, ref d._RequestedBy, sf);
                }
                private static bool _RequestedBy_ComputeIsReadOnly(global::LightSwitchApplication.vmControl e)
                {
                    bool result = false;
                    e.RequestedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _RequestedBy_Validate(global::LightSwitchApplication.vmControl e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RequestedBy_Validate(r);
                }
                private static string _RequestedBy_GetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d)
                {
                    return d.ImplementationEntity.RequestedBy;
                }
                private static void _RequestedBy_SetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d, string v)
                {
                    d.ImplementationEntity.RequestedBy = v;
                }
                private static void _RequestedBy_OnValueChanged(global::LightSwitchApplication.vmControl e)
                {
                    e.RequestedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Entry
                    vmServiceName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Entry(
                        "vmServiceName",
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmServiceName_Stub,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmServiceName_ComputeIsReadOnly,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmServiceName_Validate,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmServiceName_GetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmServiceName_SetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._vmServiceName_OnValueChanged);
                private static void _vmServiceName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vmControl.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Data> c, global::LightSwitchApplication.vmControl.DetailsClass d, object sf)
                {
                    c(d, ref d._vmServiceName, sf);
                }
                private static bool _vmServiceName_ComputeIsReadOnly(global::LightSwitchApplication.vmControl e)
                {
                    bool result = false;
                    e.vmServiceName_IsReadOnly(ref result);
                    return result;
                }
                private static void _vmServiceName_Validate(global::LightSwitchApplication.vmControl e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.vmServiceName_Validate(r);
                }
                private static string _vmServiceName_GetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d)
                {
                    return d.ImplementationEntity.vmServiceName;
                }
                private static void _vmServiceName_SetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d, string v)
                {
                    d.ImplementationEntity.vmServiceName = v;
                }
                private static void _vmServiceName_OnValueChanged(global::LightSwitchApplication.vmControl e)
                {
                    e.vmServiceName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Entry
                    AzureSubscription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Entry(
                        "AzureSubscription",
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._AzureSubscription_Stub,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._AzureSubscription_ComputeIsReadOnly,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._AzureSubscription_Validate,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._AzureSubscription_GetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._AzureSubscription_SetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._AzureSubscription_OnValueChanged);
                private static void _AzureSubscription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vmControl.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Data> c, global::LightSwitchApplication.vmControl.DetailsClass d, object sf)
                {
                    c(d, ref d._AzureSubscription, sf);
                }
                private static bool _AzureSubscription_ComputeIsReadOnly(global::LightSwitchApplication.vmControl e)
                {
                    bool result = false;
                    e.AzureSubscription_IsReadOnly(ref result);
                    return result;
                }
                private static void _AzureSubscription_Validate(global::LightSwitchApplication.vmControl e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AzureSubscription_Validate(r);
                }
                private static string _AzureSubscription_GetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d)
                {
                    return d.ImplementationEntity.AzureSubscription;
                }
                private static void _AzureSubscription_SetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AzureSubscription = v;
                }
                private static void _AzureSubscription_OnValueChanged(global::LightSwitchApplication.vmControl e)
                {
                    e.AzureSubscription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    RequestedStoptime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "RequestedStoptime",
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedStoptime_Stub,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedStoptime_ComputeIsReadOnly,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedStoptime_Validate,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedStoptime_GetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedStoptime_SetImplementationValue,
                        global::LightSwitchApplication.vmControl.DetailsClass.PropertySetProperties._RequestedStoptime_OnValueChanged);
                private static void _RequestedStoptime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.vmControl.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.vmControl.DetailsClass d, object sf)
                {
                    c(d, ref d._RequestedStoptime, sf);
                }
                private static bool _RequestedStoptime_ComputeIsReadOnly(global::LightSwitchApplication.vmControl e)
                {
                    bool result = false;
                    e.RequestedStoptime_IsReadOnly(ref result);
                    return result;
                }
                private static void _RequestedStoptime_Validate(global::LightSwitchApplication.vmControl e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RequestedStoptime_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _RequestedStoptime_GetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d)
                {
                    return d.ImplementationEntity.RequestedStoptime;
                }
                private static void _RequestedStoptime_SetImplementationValue(global::LightSwitchApplication.vmControl.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.RequestedStoptime = global::LightSwitchApplication.vmControl.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _RequestedStoptime_OnValueChanged(global::LightSwitchApplication.vmControl e)
                {
                    e.RequestedStoptime_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Data _vmName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _StartTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Data _RequestedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Data _vmServiceName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, string>.Data _AzureSubscription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.vmControl, global::LightSwitchApplication.vmControl.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _RequestedStoptime;
            
        }
    
        #endregion
    }
    
    #endregion
}
